pipeline {
    agent none  

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')  // Jenkins credentials store
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
    }

    stages {
        stage('Provision EC2 Agents') {
            agent {
                label 'ubuntu'  // Use your Jenkins master to run this stage
            }
            steps {
                script {
                    // Provision EC2 instance (use EC2 plugin)
                    ec2_create_instance(
                        ami: 'ami-xxxxxxxx',  // Specify the AMI
                        region: 'us-west-1',  // Region
                        instanceType: 't2.micro',
                        keyPair: 'your-keypair-name',
                        securityGroup: 'sg-xxxxxxxx',
                        instanceCount: 1,
                        subnetId: 'subnet-xxxxxxxx'
                    )
                }
            }
        }

        stage('Install Dependencies on EC2') {
            agent {
                label 'ubuntu'  // Jenkins master again
            }
            steps {
                script {
                    // SSH to EC2 and run your Ansible playbook for Python and MySQL setup
                    sh 'ansible-playbook -i inventory.ini setup_mysql_python.yml'
                }
            }
        }

        stage('Run Python Script') {
            agent {
                label 'ec2-agent'  // Target the EC2 instance as an agent
            }
            steps {
                script {
                    // Execute the Python script on the EC2 agent (every 5 minutes as set up)
                    sh 'python3 /var/www/html/log_stats.py'
                }
            }
        }

        stage('Cleanup') {
            agent {
                label 'ubuntu'  // Jenkins master again
            }
            steps {
                script {
                    // Cleanup tasks (like terminating EC2 instances if required)
                    sh 'ansible-playbook -i inventory.ini cleanup.yml'
                }
            }
        }
    }
}
