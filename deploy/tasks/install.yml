
---
- name: Ensure Java is installed
  apt:
    name: openjdk-11-jre-headless
    state: present
  become: yes

- name: Add Jenkins repository key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    state: present
  become: yes

- name: Add Jenkins repository to sources list
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present
  become: yes

- name: Update apt package cache
  apt:
    update_cache: yes
  become: yes

- name: Install Jenkins
  apt:
    name: jenkins
    state: present
  become: yes

- name: Ensure Jenkins service is started and enabled
  service:
    name: jenkins
    state: started
    enabled: yes
  become: yes

- name: Open Jenkins port in firewall (if UFW is active)
  ufw:
    rule: allow
    port: 8080
    proto: tcp
  become: yes
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Install cron package
  package:
      name: cron
      state: present

- name: Add cron job
  cron:
      name: "Run log_stats.py every 5 minutes"
      minute: "*/5"
      job: /usr/bin/python3/var/lib/mysql/syslogs
      user: ubuntu

  
- name: Update package cache (dnf)
  dnf:
      update_cache: yes
      when: ansible_pkg_mgr == 'dnf'

- name: Install MariaDB Server (Amazon Linux 2023)
  dnf:
    name:
    - mariadb105
    - mariadb105-server
    state: present
    when: ansible_distribution == 'Amazon' and ansible_distribution_major_version == "2023"

- name: Install MariaDB Server (Other distributions)
  package:
      name: mariadb-server
      state: present
      when: ansible_distribution != 'Amazon' or (ansible_distribution == 'Amazon' and ansible_distribution_major_version != "2023")

- name: Install pip3 for Python 3
  dnf:
      name: python3-pip
      state: present

- name: Install PyMySQL using pip3
  pip:
      name: PyMySQL
      executable: pip3

- name: Set Python interpreter for MySQL modules
  set_fact:
  ansible_python_interpreter: /usr/bin/python3

- name: Start and enable MariaDB service
  systemd:
      name: mariadb
      state: started
      enabled: yes

- name: Ensure MySQL is running
  service:
      name: mariadb
      state: started

- name: Change MySQL root password
  mysql_user:
      name: root
      host: localhost
      password: admin123
      state: present
      login_user: root
      login_password: admin123

- name: Create MySQL database
  community.mysql.mysql_db:
      name: "{{ db_name }}"
      state: present
      login_user: root
      login_password: "{{ root_password }}"
      login_host: localhost

- name: Create MySQL user and grant privileges
  community.mysql.mysql_user:
      name: "{{ db_user }}"
      password: "{{ db_pass }}"
      priv: "{{ db_name }}.*:ALL"
      state: present
      login_user: root
      login_password: "{{ root_password }}"
      login_host: localhost

- name: Flush privileges
  community.mysql.mysql_query:
      query: "FLUSH PRIVILEGES;"
      login_user: root
      login_password: "{{ root_password }}"

- name: Copy init_db.sql script to user directory
  copy:
      src: init_db.sql
      dest: /home/ec2-user/init_db.sql
      owner: ec2-user
      group: ec2-user
      mode: '0644'

- name: Execute init_db.sql script
  shell: "mysql -u root -p{{ root_password }} {{ db_name }} < /home/ec2-user/init_db.sql"
  args:
      chdir: "/home/ec2-user"
