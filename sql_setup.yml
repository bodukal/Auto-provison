- name: Install MySQL and Configure Database
  hosts: M1
  become: yes

  tasks:
    - name: Update package cache (dnf)
      dnf:
        update_cache: yes
      when: ansible_pkg_mgr == 'dnf'

    - name: Install MariaDB Server (Amazon Linux 2023)
      dnf:
        name:
          - mariadb105
          - mariadb105-server
        state: present
      when: ansible_distribution == 'Amazon' and ansible_distribution_major_version == "2023"

    - name: Install MariaDB Server (Other distributions)
      package:
        name: mariadb-server
        state: present
      when: ansible_distribution != 'Amazon' or (ansible_distribution == 'Amazon' and ansible_distribution_major_version != "2023")

    - name: Install pip3 for Python 3
      dnf:
        name: python3-pip
        state: present

    - name: Install PyMySQL using pip3
      pip:
        name: PyMySQL
        executable: pip3

    - name: Set Python interpreter for MySQL modules
      set_fact:
        ansible_python_interpreter: /usr/bin/python3

    - name: Start and enable MariaDB service
      systemd:
        name: mariadb
        state: started
        enabled: yes

    - name: Ensure MySQL is running
      service:
        name: mariadb
        state: started

    - name: Set root password and authentication method
      shell: |
        mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'admin123'; FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Create MySQL database
      community.mysql.mysql_db:
        name: "{{ db_name | default('syslogs') }}"
        state: present
        login_user: root
        login_password: admin123
        login_host: localhost

    - name: Create MySQL user and grant privileges
      community.mysql.mysql_user:
        name: "{{ db_user | default('devops') }}"
        password: "{{ db_pass | default('password') }}"
        priv: "{{ db_name | default('syslogs') }}.*:ALL"
        state: present
        login_user: root
        login_password: admin123
        login_host: localhost

    - name: Flush privileges
      community.mysql.mysql_query:
        query: "FLUSH PRIVILEGES;"
        login_user: root
        login_password: admin123

    - name: Copy init_db.sql script to user directory
      copy:
        src: init_db.sql
        dest: /home/ec2-user/init_db.sql
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Execute init_db.sql script
      shell: "mysql -u root -padmin123 syslogs < /home/ec2-user/init_db.sql"
      args:
        chdir: "/home/ec2-user"
